{"version":3,"file":"assets/js/105.d647ecc1.js","mappings":"iMACOA,MAAM,yB,GACJA,MAAM,mB,GAINA,MAAM,Q,0CALbC,EAAAA,EAAAA,IAOM,MAPNC,EAOM,EANJC,EAAAA,EAAAA,IAKM,MALNC,EAKM,C,aAJJD,EAAAA,EAAAA,IAEM,OAFDH,MAAM,8BAA8BK,KAAK,U,EAC5CF,EAAAA,EAAAA,IAA2C,QAArCH,MAAM,mBAAkB,Y,KAEhCG,EAAAA,EAAAA,IAAiC,IAAjCG,GAAiCC,EAAAA,EAAAA,IAAdC,EAAAC,SAAO,M,oDAWhC,GACEC,KAAM,iBAENC,KAAAA,GACE,MAAMC,GAASC,EAAAA,EAAAA,MACTC,GAAQC,EAAAA,EAAAA,MACRC,GAAYC,EAAAA,EAAAA,KAEZR,GAAUS,EAAAA,EAAAA,IAAI,eAwEpB,OAtEAC,EAAAA,EAAAA,IAAUC,UACR,IAEE,MAAMC,EAAOP,EAAMQ,MAAMD,KACnBE,EAAQT,EAAMQ,MAAMC,MAE1B,IAAKF,IAASE,EAKZ,OAJAd,EAAQe,MAAQ,qBAChBC,WAAW,KACTb,EAAOc,KAAK,YACX,KAKLjB,EAAQe,MAAQ,gBAChB,MAAMG,QAAiBC,EAAAA,EAAAA,IAAW,CAAEP,OAAME,UAEtCI,EAASE,SAAWF,EAASG,QAE/Bd,EAAUe,MAAQJ,EAASG,OAC3Bd,EAAUgB,aAAeL,EAASM,QAClCjB,EAAUkB,SAAWP,EAASQ,KAE9BC,aAAaC,QAAQ,eAAgBV,EAASG,QAC9CM,aAAaC,QAAQ,gBAAiBV,EAASM,SAC/CG,aAAaC,QAAQ,YAAaC,KAAKC,UAAUZ,EAASQ,OAE1D1B,EAAQe,MAAQ,eAEhBC,WAAW,KACTb,EAAOc,KAAK,MACX,MACMC,EAASa,iBAElB/B,EAAQe,MAAQ,gBAGhBiB,eAAeJ,QAAQ,eAAgBC,KAAKC,UAAU,CACpDG,QAASf,EAASe,QAClBC,WAAYhB,EAASgB,cAGvBlB,WAAW,KACTb,EAAOc,KAAK,CACVkB,KAAM,aACNtB,MAAO,CACLuB,QAAS,OACTxB,KAAMA,EACNE,MAAOA,MAGV,QAEHd,EAAQe,MAAQG,EAASmB,OAAS,aAClCrB,WAAW,KACTb,EAAOc,KAAK,YACX,KAGP,CAAE,MAAOoB,GACPC,QAAQD,MAAM,YAAaA,GAC3BrC,EAAQe,MAAQsB,EAAMnB,UAAUqB,MAAMF,OAASA,EAAMrC,SAAW,aAEhEgB,WAAW,KACTb,EAAOc,KAAK,YACX,IACL,IAGK,CACLjB,UAEJ,G,UC7FF,MAAMwC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://roamio-web/./src/views/auth/QQCallbackView.vue","webpack://roamio-web/./src/views/auth/QQCallbackView.vue?4db7"],"sourcesContent":["<template>\r\n  <div class=\"qq-callback-container\">\r\n    <div class=\"loading-spinner\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">处理中...</span>\r\n      </div>\r\n      <p class=\"mt-3\">{{ message }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRouter, useRoute } from 'vue-router'\r\nimport { useUserStore } from '@/stores'\r\nimport { qqCallback } from '@/api/auth'\r\n\r\nexport default {\r\n  name: 'QQCallbackView',\r\n  \r\n  setup() {\r\n    const router = useRouter()\r\n    const route = useRoute()\r\n    const userStore = useUserStore()\r\n    \r\n    const message = ref('正在处理QQ登录...')\r\n    \r\n    onMounted(async () => {\r\n      try {\r\n        // 获取URL参数\r\n        const code = route.query.code\r\n        const state = route.query.state\r\n        \r\n        if (!code || !state) {\r\n          message.value = '缺少必要的参数，请重新登录'\r\n          setTimeout(() => {\r\n            router.push('/login/')\r\n          }, 2000)\r\n          return\r\n        }\r\n        \r\n        // 调用后端API处理QQ登录\r\n        message.value = '正在验证QQ登录信息...'\r\n        const response = await qqCallback({ code, state })\r\n        \r\n        if (response.success && response.access) {\r\n          // 登录成功\r\n          userStore.token = response.access\r\n          userStore.refreshToken = response.refresh\r\n          userStore.userInfo = response.user\r\n          \r\n          localStorage.setItem('access_token', response.access)\r\n          localStorage.setItem('refresh_token', response.refresh)\r\n          localStorage.setItem('user_info', JSON.stringify(response.user))\r\n          \r\n          message.value = '登录成功！正在跳转...'\r\n          \r\n          setTimeout(() => {\r\n            router.push('/')\r\n          }, 1000)\r\n        } else if (response.need_bind_email) {\r\n          // 需要绑定邮箱\r\n          message.value = '首次QQ登录，需要绑定邮箱'\r\n          \r\n          // 保存QQ信息，跳转到邮箱绑定页面\r\n          sessionStorage.setItem('qq_bind_info', JSON.stringify({\r\n            qq_info: response.qq_info,\r\n            temp_token: response.temp_token\r\n          }))\r\n          \r\n          setTimeout(() => {\r\n            router.push({\r\n              path: '/register/',\r\n              query: {\r\n                qq_bind: 'true',\r\n                code: code,\r\n                state: state\r\n              }\r\n            })\r\n          }, 1500)\r\n        } else {\r\n          message.value = response.error || 'QQ登录失败，请重试'\r\n          setTimeout(() => {\r\n            router.push('/login/')\r\n          }, 2000)\r\n        }\r\n        \r\n      } catch (error) {\r\n        console.error('QQ登录处理失败:', error)\r\n        message.value = error.response?.data?.error || error.message || 'QQ登录失败，请重试'\r\n        \r\n        setTimeout(() => {\r\n          router.push('/login/')\r\n        }, 2000)\r\n      }\r\n    })\r\n    \r\n    return {\r\n      message\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.qq-callback-container {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n}\r\n\r\n.loading-spinner {\r\n  text-align: center;\r\n  color: white;\r\n}\r\n\r\n.spinner-border {\r\n  width: 3rem;\r\n  height: 3rem;\r\n  border-width: 0.3em;\r\n}\r\n\r\n.loading-spinner p {\r\n  font-size: 1.1rem;\r\n  margin-top: 1rem;\r\n}\r\n</style>\r\n\r\n","import { render } from \"./QQCallbackView.vue?vue&type=template&id=493eba71&scoped=true\"\nimport script from \"./QQCallbackView.vue?vue&type=script&lang=js\"\nexport * from \"./QQCallbackView.vue?vue&type=script&lang=js\"\n\nimport \"./QQCallbackView.vue?vue&type=style&index=0&id=493eba71&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-493eba71\"]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","role","_hoisted_3","_toDisplayString","$setup","message","name","setup","router","useRouter","route","useRoute","userStore","useUserStore","ref","onMounted","async","code","query","state","value","setTimeout","push","response","qqCallback","success","access","token","refreshToken","refresh","userInfo","user","localStorage","setItem","JSON","stringify","need_bind_email","sessionStorage","qq_info","temp_token","path","qq_bind","error","console","data","__exports__","render"],"sourceRoot":""}